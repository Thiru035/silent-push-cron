name: Send Silent Push Every 15 Minutes

on:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'  # Runs every 15 minutes

jobs:
  send-silent-push:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq
          python3 -m pip install --upgrade pip
          pip3 install google-auth requests

      - name: Generate Access Token
        id: token
        env:
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        run: |
          echo "$SERVICE_ACCOUNT_JSON" > sa.json
          python3 -c "
          import json, google.oauth2.service_account, google.auth.transport.requests
          sa_info = json.loads(open('sa.json').read())
          credentials = google.oauth2.service_account.Credentials.from_service_account_info(
          sa_info, scopes=['https://www.googleapis.com/auth/firebase.messaging'])
          request = google.auth.transport.requests.Request()
          credentials.refresh(request)
          print(credentials.token)
          " > ACCESS_TOKEN.txt
          ACCESS_TOKEN=$(cat ACCESS_TOKEN.txt)
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Send Silent Push Notification
        env:
          FCM_TOKEN: ${{ secrets.DEVICE_FCM_TOKEN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -H "Cache-Control: no-cache" \
            https://fcm.googleapis.com/v1/projects/$PROJECT_ID/messages:send \
            -d '{
              "message": {
                "token": "'"$FCM_TOKEN"'",
                "apns": {
                  "headers": {
                    "apns-priority": "5",
                    "apns-push-type": "background"
                  },
                  "payload": {
                    "aps": {
                      "content-available": 1,
                      "sound": ""
                    }
                  }
                },
                "data": {
                  "silent": "true",
                  "action": "location_upload",
                  "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
                }
              }
            }'
